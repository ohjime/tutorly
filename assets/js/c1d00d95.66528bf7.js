"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5],{1109:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>o});const s=JSON.parse('{"id":"features/app/bloc","title":"Class Diagrams for App Bloc","description":"This document provides an overview of the classes in the app/bloc directory, along with their relationships, represented as class diagrams using Mermaid syntax.","source":"@site/docs/features/app/bloc.md","sourceDirName":"features/app","slug":"/features/app/bloc","permalink":"/tutorly/docs/features/app/bloc","draft":false,"unlisted":false,"editUrl":"https://github.com/ohjime/tutorly/tree/main/docs/docs/docs/features/app/bloc.md","tags":[],"version":"current","frontMatter":{}}');var i=n(4848),a=n(8453);const r={},c="Class Diagrams for App Bloc",d={},o=[{value:"Class Diagram",id:"class-diagram",level:2},{value:"Description",id:"description",level:2},{value:"AppBloc",id:"appbloc",level:3},{value:"AppEvent",id:"appevent",level:3},{value:"AppState",id:"appstate",level:3},{value:"Relationships",id:"relationships",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"class-diagrams-for-app-bloc",children:"Class Diagrams for App Bloc"})}),"\n",(0,i.jsxs)(t.p,{children:["This document provides an overview of the classes in the ",(0,i.jsx)(t.code,{children:"app/bloc"})," directory, along with their relationships, represented as class diagrams using Mermaid syntax."]}),"\n",(0,i.jsx)(t.h2,{id:"class-diagram",children:"Class Diagram"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-mermaid",children:"classDiagram\n    class AppBloc {\n        - AuthenticationRepository _authenticationRepository\n        - UserRepository _userRepository\n        + AppBloc(AuthenticationRepository authenticationRepository, UserRepository userRepository)\n        + _onCredentialSubscriptionRequested(CredentialSubscriptionRequested event, Emitter<AppState> emit)\n        + _onLogoutPressed(LogoutPressed event, Emitter<AppState> emit)\n        + _onVerifyOnboardingStatus(VerifyOnboardingStatus event, Emitter<AppState> emit)\n    }\n\n    class AppEvent {\n        <<abstract>>\n    }\n    class CredentialSubscriptionRequested {\n        + CredentialSubscriptionRequested()\n    }\n    class LogoutPressed {\n        + LogoutPressed()\n    }\n    class VerifyOnboardingStatus {\n        + VerifyOnboardingStatus()\n    }\n\n    AppEvent <|-- CredentialSubscriptionRequested\n    AppEvent <|-- LogoutPressed\n    AppEvent <|-- VerifyOnboardingStatus\n\n    class AppState {\n        <<abstract>>\n        + List<Object?> get props\n    }\n    class Starting {\n        + Starting()\n    }\n    class Unauthenticated {\n        + Unauthenticated()\n    }\n    class Authenticated {\n        + Authenticated(AuthCredential credential)\n        + AuthCredential credential\n    }\n    class OnboardingRequired {\n        + OnboardingRequired(AuthCredential credential)\n    }\n\n    AppState <|-- Starting\n    AppState <|-- Unauthenticated\n    AppState <|-- Authenticated\n    Authenticated <|-- OnboardingRequired\n\n    AppBloc --\x3e AppEvent\n    AppBloc --\x3e AppState\n"})}),"\n",(0,i.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,i.jsx)(t.h3,{id:"appbloc",children:"AppBloc"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"AppBloc"})," class is the main Bloc for managing the application's state. It listens to events and updates the state accordingly. The key events handled by ",(0,i.jsx)(t.code,{children:"AppBloc"})," include:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"CredentialSubscriptionRequested"}),": Subscribes to the authentication repository's credential stream."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"LogoutPressed"}),": Handles user logout."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"VerifyOnboardingStatus"}),": Verifies the onboarding status of the current user."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"appevent",children:"AppEvent"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"AppEvent"})," is the base class for all events in the ",(0,i.jsx)(t.code,{children:"AppBloc"}),". Specific events extend this class to handle different actions within the application."]}),"\n",(0,i.jsx)(t.h3,{id:"appstate",children:"AppState"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(t.code,{children:"AppState"})," is the base class for all states in the ",(0,i.jsx)(t.code,{children:"AppBloc"}),". Specific states extend this class to represent different stages of the application's lifecycle. Examples include:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Starting"}),": Represents the initial state of the application."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Unauthenticated"}),": Represents the state when the user is not authenticated."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"Authenticated"}),": Represents the state when the user is authenticated. This state is further extended by ",(0,i.jsx)(t.code,{children:"OnboardingRequired"})," to indicate that the user requires onboarding."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"relationships",children:"Relationships"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"AppBloc"})," depends on ",(0,i.jsx)(t.code,{children:"AppEvent"})," and ",(0,i.jsx)(t.code,{children:"AppState"})," to manage the application's state."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"AppEvent"})," is extended by specific events like ",(0,i.jsx)(t.code,{children:"CredentialSubscriptionRequested"}),", ",(0,i.jsx)(t.code,{children:"LogoutPressed"}),", and ",(0,i.jsx)(t.code,{children:"VerifyOnboardingStatus"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.code,{children:"AppState"})," is extended by specific states like ",(0,i.jsx)(t.code,{children:"Starting"}),", ",(0,i.jsx)(t.code,{children:"Unauthenticated"}),", and ",(0,i.jsx)(t.code,{children:"Authenticated"}),". The ",(0,i.jsx)(t.code,{children:"Authenticated"})," state is further extended by ",(0,i.jsx)(t.code,{children:"OnboardingRequired"}),"."]}),"\n"]})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>c});var s=n(6540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);