"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[348],{6251:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"features/login/cubit","title":"Login Cubit Documentation","description":"This document provides an overview of the LoginCubit and its associated state management for the login feature.","source":"@site/docs/features/login/cubit.md","sourceDirName":"features/login","slug":"/features/login/cubit","permalink":"/tutorly/docs/features/login/cubit","draft":false,"unlisted":false,"editUrl":"https://github.com/ohjime/tutorly/tree/main/docs/docs/docs/features/login/cubit.md","tags":[],"version":"current","frontMatter":{}}');var s=i(4848),o=i(8453);const r={},a="Login Cubit Documentation",c={},l=[{value:"Class Diagram",id:"class-diagram",level:2},{value:"Description",id:"description",level:2},{value:"LoginCubit",id:"logincubit",level:3},{value:"Methods",id:"methods",level:4},{value:"LoginState",id:"loginstate",level:3}];function d(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"login-cubit-documentation",children:"Login Cubit Documentation"})}),"\n",(0,s.jsxs)(t.p,{children:["This document provides an overview of the ",(0,s.jsx)(t.code,{children:"LoginCubit"})," and its associated state management for the login feature."]}),"\n",(0,s.jsx)(t.h2,{id:"class-diagram",children:"Class Diagram"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-mermaid",children:"classDiagram\n    class LoginCubit {\n        - AuthenticationRepository _authenticationRepository\n        + LoginCubit(AuthenticationRepository authenticationRepository)\n        + login(String email, String password)\n        + loginWithGoogle()\n        + resetError()\n    }\n\n    class LoginState {\n        + LoginStatus status\n        + String? errorMessage\n        + LoginState copyWith(LoginStatus? status, String? errorMessage)\n    }\n\n    LoginCubit --\x3e LoginState\n"})}),"\n",(0,s.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,s.jsx)(t.h3,{id:"logincubit",children:"LoginCubit"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"LoginCubit"})," is responsible for managing the state of the login process. It interacts with the ",(0,s.jsx)(t.code,{children:"AuthenticationRepository"})," to handle user authentication. The cubit provides methods for logging in with email and password, logging in with Google, and resetting errors."]}),"\n",(0,s.jsx)(t.h4,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"login(String email, String password)"}),": Initiates the login process using the provided email and password. Emits a loading state, followed by either a success or failure state."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"loginWithGoogle()"}),": Initiates the login process using Google authentication. Emits a loading state, followed by either a success or failure state."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"resetError()"}),": Resets the error state to its initial value."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"loginstate",children:"LoginState"}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"LoginState"})," class represents the state of the login process. It includes the following properties:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"status"}),": An enum representing the current status of the login process (",(0,s.jsx)(t.code,{children:"initial"}),", ",(0,s.jsx)(t.code,{children:"loading"}),", ",(0,s.jsx)(t.code,{children:"success"}),", or ",(0,s.jsx)(t.code,{children:"failure"}),")."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"errorMessage"}),": An optional string containing an error message if the login process fails."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["The ",(0,s.jsx)(t.code,{children:"copyWith"})," method allows for creating a new instance of ",(0,s.jsx)(t.code,{children:"LoginState"})," with updated properties while preserving the existing ones."]})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var n=i(6540);const s={},o=n.createContext(s);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);