"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[286],{1818:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>g,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"features/login/view","title":"Login View Documentation","description":"This document provides an overview of the LoginPage and its associated components for the login feature.","source":"@site/docs/features/login/view.md","sourceDirName":"features/login","slug":"/features/login/view","permalink":"/tutorly/docs/features/login/view","draft":false,"unlisted":false,"editUrl":"https://github.com/ohjime/tutorly/tree/main/docs/docs/docs/features/login/view.md","tags":[],"version":"current","frontMatter":{}}');var t=i(4848),s=i(8453);const a={},r="Login View Documentation",c={},d=[{value:"Component Diagram",id:"component-diagram",level:2},{value:"View Details",id:"view-details",level:2},{value:"LoginPage",id:"loginpage",level:3},{value:"LoginView",id:"loginview",level:3},{value:"Sequence Diagram",id:"sequence-diagram",level:4},{value:"Forgot Password Flow",id:"forgot-password-flow",level:3},{value:"Sequence Diagram",id:"sequence-diagram-1",level:4}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"login-view-documentation",children:"Login View Documentation"})}),"\n",(0,t.jsxs)(n.p,{children:["This document provides an overview of the ",(0,t.jsx)(n.code,{children:"LoginPage"})," and its associated components for the login feature."]}),"\n",(0,t.jsx)(n.h2,{id:"component-diagram",children:"Component Diagram"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"flowchart TD\n    LoginPage --\x3e LoginView\n    LoginView --\x3e LoginCubit\n    LoginView --\x3e AuthenticationRepository\n    LoginView --\x3e AwesomeDialog\n    LoginView --\x3e EmailPassLoginField\n    LoginView --\x3e AppButton\n"})}),"\n",(0,t.jsx)(n.h2,{id:"view-details",children:"View Details"}),"\n",(0,t.jsx)(n.h3,{id:"loginpage",children:"LoginPage"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"LoginPage"})," serves as the entry point for the login feature. It initializes the ",(0,t.jsx)(n.code,{children:"LoginCubit"})," and provides it to the widget tree. This page is responsible for managing the state of the login process and handling user interactions."]}),"\n",(0,t.jsx)(n.h3,{id:"loginview",children:"LoginView"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"LoginView"})," is a stateful widget that contains the UI for the login feature. It includes the following components:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"EmailPassLoginField"}),": Used for creating and validating the Email Login Form"]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AppButton"}),": Custom buttons for user actions, such as signing in and resetting the password."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"AwesomeDialog"}),": An external flutter package used for displaying dialogs, such as error messages and password reset confirmations. (Source Package: ",(0,t.jsx)(n.a,{href:"https://pub.dev/packages/awesome_dialog",children:"awesome_dialog"}),")"]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"sequence-diagram",children:"Sequence Diagram"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant User\n    participant LoginPage\n    participant LoginCubit\n    participant AuthenticationRepository\n\n    User->>LoginPage: Open Login Page\n    LoginPage->>LoginCubit: Initialize\n    User->>LoginCubit: Enter Email and Password\n    LoginCubit->>AuthenticationRepository: Authenticate User\n    AuthenticationRepository--\x3e>LoginCubit: Success or Failure\n    LoginCubit--\x3e>LoginPage: Update State\n    LoginPage--\x3e>User: Show Success or Error Dialog\n"})}),"\n",(0,t.jsx)(n.h3,{id:"forgot-password-flow",children:"Forgot Password Flow"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.code,{children:"LoginView"}),' also includes a forgot password feature. When the user taps the "Forgot Password" button, a dialog is displayed where the user can enter their email address. Upon submission, the app sends a password reset link to the provided email address.']}),"\n",(0,t.jsx)(n.h4,{id:"sequence-diagram-1",children:"Sequence Diagram"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-mermaid",children:"sequenceDiagram\n    participant User\n    participant LoginView\n    participant AuthenticationRepository\n\n    User->>LoginView: Tap Forgot Password\n    LoginView->>AuthenticationRepository: Send Reset Link\n    AuthenticationRepository--\x3e>LoginView: Success or Failure\n    LoginView--\x3e>User: Show Success or Error Dialog\n"})})]})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>a,x:()=>r});var o=i(6540);const t={},s=o.createContext(t);function a(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);